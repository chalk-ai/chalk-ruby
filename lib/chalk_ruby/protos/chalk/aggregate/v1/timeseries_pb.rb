# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chalk/aggregate/v1/timeseries.proto

require 'google/protobuf'

require 'google/protobuf/duration_pb'


descriptor_data = "\n#chalk/aggregate/v1/timeseries.proto\x12\x12\x63halk.aggregate.v1\x1a\x1egoogle/protobuf/duration.proto\"\x92\x02\n\x17\x41ggregateTimeSeriesRule\x12 \n\x0b\x61ggregation\x18\x01 \x01(\tR\x0b\x61ggregation\x12\x42\n\x0f\x62ucket_duration\x18\x02 \x01(\x0b\x32\x19.google.protobuf.DurationR\x0e\x62ucketDuration\x12-\n\x12\x64\x65pendent_features\x18\x03 \x03(\tR\x11\x64\x65pendentFeatures\x12\x37\n\tretention\x18\x04 \x01(\x0b\x32\x19.google.protobuf.DurationR\tretention\x12)\n\x10\x64\x61tetime_feature\x18\x05 \x01(\tR\x0f\x64\x61tetimeFeature\"\x8c\x02\n\x13\x41ggregateTimeSeries\x12\x1c\n\tnamespace\x18\x01 \x01(\tR\tnamespace\x12!\n\x0c\x61ggregate_on\x18\x02 \x01(\tR\x0b\x61ggregateOn\x12\x19\n\x08group_by\x18\x03 \x03(\tR\x07groupBy\x12\x41\n\x05rules\x18\x05 \x03(\x0b\x32+.chalk.aggregate.v1.AggregateTimeSeriesRuleR\x05rules\x12/\n\x13\x66ilters_description\x18\x06 \x01(\tR\x12\x66iltersDescription\x12%\n\x0e\x62ucket_feature\x18\x07 \x01(\tR\rbucketFeatureB\xa2\x01\n\x16\x63om.chalk.aggregate.v1B\x0fTimeseriesProtoP\x01Z\x18\x61ggregate/v1;aggregatev1\xa2\x02\x03\x43\x41X\xaa\x02\x12\x43halk.Aggregate.V1\xca\x02\x12\x43halk\\Aggregate\\V1\xe2\x02\x1e\x43halk\\Aggregate\\V1\\GPBMetadata\xea\x02\tChalkRubyb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module ChalkRuby
  AggregateTimeSeriesRule = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.aggregate.v1.AggregateTimeSeriesRule").msgclass
  AggregateTimeSeries = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.aggregate.v1.AggregateTimeSeries").msgclass
end
