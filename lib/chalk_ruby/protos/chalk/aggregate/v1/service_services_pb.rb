# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: chalk/aggregate/v1/service.proto for package 'ChalkRuby'

require 'grpc'
require 'chalk/aggregate/v1/service_pb'

module ChalkRuby
  module AggregateService
    class Service

      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'chalk.aggregate.v1.AggregateService'

      # PlanAggregateBackfill determines the estimated resources needed to backfill
      # an aggregate.
      #
      # This method is a duplicate of the PlanAggregateBackfill method
      # in the query_server.proto file. We should remove the query_server.proto method
      # and move that request to this service instead.
      # buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
      rpc :PlanAggregateBackfill, ::ChalkRuby::PlanAggregateBackfillRequest, ::ChalkRuby::PlanAggregateBackfillResponse
      # This method is a duplicate of the PlanAggregateBackfill method
      # in the query_server.proto file. We should remove the query_server.proto method
      # and move that request to this service instead.
      # buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
      rpc :GetAggregates, ::ChalkRuby::GetAggregatesRequest, ::ChalkRuby::GetAggregatesResponse
      rpc :GetAggregateBackfillJobs, ::ChalkRuby::GetAggregateBackfillJobsRequest, ::ChalkRuby::GetAggregateBackfillJobsResponse
      rpc :GetAggregateBackfillJob, ::ChalkRuby::GetAggregateBackfillJobRequest, ::ChalkRuby::GetAggregateBackfillJobResponse
    end

    Stub = Service.rpc_stub_class
  end
end
