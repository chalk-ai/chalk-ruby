# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chalk/artifacts/v1/cron_query.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'


descriptor_data = "\n#chalk/artifacts/v1/cron_query.proto\x12\x12\x63halk.artifacts.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"Y\n\x11RecomputeSettings\x12!\n\x0c\x66\x65\x61ture_fqns\x18\x01 \x03(\tR\x0b\x66\x65\x61tureFqns\x12!\n\x0c\x61ll_features\x18\x02 \x01(\x08R\x0b\x61llFeatures\"\xa0\x04\n\tCronQuery\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n\x04\x63ron\x18\x02 \x01(\tR\x04\x63ron\x12\x1b\n\tfile_name\x18\x03 \x01(\tR\x08\x66ileName\x12\x16\n\x06output\x18\x04 \x03(\tR\x06output\x12$\n\x0bmax_samples\x18\x05 \x01(\x03H\x00R\nmaxSamples\x88\x01\x01\x12\x43\n\trecompute\x18\x06 \x01(\x0b\x32%.chalk.artifacts.v1.RecomputeSettingsR\trecompute\x12;\n\x0blower_bound\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\nlowerBound\x12;\n\x0bupper_bound\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\nupperBound\x12\x12\n\x04tags\x18\t \x03(\tR\x04tags\x12\x34\n\x16required_resolver_tags\x18\n \x03(\tR\x14requiredResolverTags\x12!\n\x0cstore_online\x18\x0b \x01(\x08R\x0bstoreOnline\x12#\n\rstore_offline\x18\x0c \x01(\x08R\x0cstoreOffline\x12/\n\x13incremental_sources\x18\r \x03(\tR\x12incrementalSourcesB\x0e\n\x0c_max_samplesB\x87\x01\n\x16\x63om.chalk.artifacts.v1B\x0e\x43ronQueryProtoP\x01\xa2\x02\x03\x43\x41X\xaa\x02\x12\x43halk.Artifacts.V1\xca\x02\x12\x43halk\\Artifacts\\V1\xe2\x02\x1e\x43halk\\Artifacts\\V1\\GPBMetadata\xea\x02\tChalkRubyb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module ChalkRuby
  RecomputeSettings = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.artifacts.v1.RecomputeSettings").msgclass
  CronQuery = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.artifacts.v1.CronQuery").msgclass
end
