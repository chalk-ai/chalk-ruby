# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: chalk/engine/v1/query_server.proto for package 'ChalkRuby'

require 'grpc'
require 'chalk/engine/v1/query_server_pb'

module ChalkRuby
  module QueryService
    class Service

      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'chalk.engine.v1.QueryService'

      rpc :Ping, ::ChalkRuby::PingRequest, ::ChalkRuby::PingResponse
      rpc :OnlineQuery, ::ChalkRuby::OnlineQueryRequest, ::ChalkRuby::OnlineQueryResponse
      rpc :OnlineQueryBulk, ::ChalkRuby::OnlineQueryBulkRequest, ::ChalkRuby::OnlineQueryBulkResponse
      rpc :OnlineQueryMulti, ::ChalkRuby::OnlineQueryMultiRequest, ::ChalkRuby::OnlineQueryMultiResponse
      rpc :UploadFeaturesBulk, ::ChalkRuby::UploadFeaturesBulkRequest, ::ChalkRuby::UploadFeaturesBulkResponse
      # PlanAggregateBackfill determines the estimated resources needed to backfill
      # an aggregate.
      #
      # This method is a duplicate of the PlanAggregateBackfill method
      # in the query_server.proto file. We should remove the query_server.proto method
      # and move that request to this service instead.
      # buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
      rpc :PlanAggregateBackfill, ::ChalkRuby::PlanAggregateBackfillRequest, ::ChalkRuby::PlanAggregateBackfillResponse
      # This method is a duplicate of the PlanAggregateBackfill method
      # in the query_server.proto file. We should remove the query_server.proto method
      # and move that request to this service instead.
      # buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
      rpc :GetAggregates, ::ChalkRuby::GetAggregatesRequest, ::ChalkRuby::GetAggregatesResponse
    end

    Stub = Service.rpc_stub_class
  end
end
