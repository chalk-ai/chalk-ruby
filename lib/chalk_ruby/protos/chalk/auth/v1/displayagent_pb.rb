# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chalk/auth/v1/displayagent.proto

require 'google/protobuf'

require 'chalk/auth/v1/featurepermission_pb'
require 'chalk/auth/v1/permissions_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n chalk/auth/v1/displayagent.proto\x12\rchalk.auth.v1\x1a%chalk/auth/v1/featurepermission.proto\x1a\x1f\x63halk/auth/v1/permissions.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"b\n\x11\x44isplayPermission\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x39\n\npermission\x18\x02 \x01(\x0e\x32\x19.chalk.auth.v1.PermissionR\npermission\"\xf7\x01\n\x1d\x44isplayEnvironmentPermissions\x12%\n\x0e\x65nvironment_id\x18\x01 \x01(\tR\renvironmentId\x12)\n\x10\x65nvironment_name\x18\x02 \x01(\tR\x0f\x65nvironmentName\x12\x1d\n\nproject_id\x18\x03 \x01(\tR\tprojectId\x12!\n\x0cproject_name\x18\x04 \x01(\tR\x0bprojectName\x12\x42\n\x0bpermissions\x18\x05 \x03(\x0b\x32 .chalk.auth.v1.DisplayPermissionR\x0bpermissions\"\x88\x03\n\x10\x44isplayUserAgent\x12\x1f\n\tclient_id\x18\x01 \x01(\tB\x02\x18\x01R\x08\x63lientId\x12\x17\n\x07user_id\x18\x02 \x01(\tR\x06userId\x12\x17\n\x07team_id\x18\x03 \x01(\tR\x06teamId\x12j\n\x1apermissions_by_environment\x18\x04 \x03(\x0b\x32,.chalk.auth.v1.DisplayEnvironmentPermissionsR\x18permissionsByEnvironment\x12\"\n\x0cimpersonated\x18\x05 \x01(\x08R\x0cimpersonated\x12\x12\n\x04name\x18\x06 \x01(\tR\x04name\x12\x14\n\x05\x65mail\x18\x07 \x01(\tR\x05\x65mail\x12\x1b\n\tteam_name\x18\x08 \x01(\tR\x08teamName\x12J\n\x0f\x63ustomer_claims\x18\t \x03(\x0b\x32!.chalk.auth.v1.DisplayCustomClaimR\x0e\x63ustomerClaims\">\n\x12\x44isplayCustomClaim\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x16\n\x06values\x18\x02 \x03(\tR\x06values\"\xc4\x04\n\x18\x44isplayServiceTokenAgent\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n\tclient_id\x18\x02 \x01(\tR\x08\x63lientId\x12\x17\n\x07team_id\x18\x03 \x01(\tR\x06teamId\x12\x1d\n\nproject_id\x18\x04 \x01(\tR\tprojectId\x12%\n\x0e\x65nvironment_id\x18\x05 \x01(\tR\renvironmentId\x12\x42\n\x0bpermissions\x18\x06 \x03(\x0b\x32 .chalk.auth.v1.DisplayPermissionR\x0bpermissions\x12\x12\n\x04name\x18\x07 \x01(\tR\x04name\x12\x1b\n\tteam_name\x18\x08 \x01(\tR\x08teamName\x12!\n\x0cproject_name\x18\t \x01(\tR\x0bprojectName\x12)\n\x10\x65nvironment_name\x18\n \x01(\tR\x0f\x65nvironmentName\x12J\n\x0f\x63ustomer_claims\x18\x0b \x03(\x0b\x32!.chalk.auth.v1.DisplayCustomClaimR\x0e\x63ustomerClaims\x12R\n\x13\x66\x65\x61ture_permissions\x18\x0c \x01(\x0b\x32!.chalk.auth.v1.FeaturePermissionsR\x12\x66\x65\x61turePermissions\x12\x39\n\ncreated_at\x18\r \x01(\x0b\x32\x1a.google.protobuf.TimestampR\tcreatedAt\"\x92\x02\n\x12\x44isplayEngineAgent\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n\x07team_id\x18\x02 \x01(\tR\x06teamId\x12\x1d\n\nproject_id\x18\x03 \x01(\tR\tprojectId\x12%\n\x0e\x65nvironment_id\x18\x04 \x01(\tR\renvironmentId\x12\"\n\x0cimpersonated\x18\x05 \x01(\x08R\x0cimpersonated\x12\x1b\n\tteam_name\x18\x06 \x01(\tR\x08teamName\x12!\n\x0cproject_name\x18\x07 \x01(\tR\x0bprojectName\x12)\n\x10\x65nvironment_name\x18\x08 \x01(\tR\x0f\x65nvironmentName\"\x14\n\x12\x44isplayTenantAgent\"\x1d\n\x1b\x44isplayMetadataServiceAgent\"\xa8\x03\n\x0c\x44isplayAgent\x12@\n\nuser_agent\x18\x01 \x01(\x0b\x32\x1f.chalk.auth.v1.DisplayUserAgentH\x00R\tuserAgent\x12Y\n\x13service_token_agent\x18\x02 \x01(\x0b\x32\'.chalk.auth.v1.DisplayServiceTokenAgentH\x00R\x11serviceTokenAgent\x12\x46\n\x0c\x65ngine_agent\x18\x03 \x01(\x0b\x32!.chalk.auth.v1.DisplayEngineAgentH\x00R\x0b\x65ngineAgent\x12\x46\n\x0ctenant_agent\x18\x04 \x01(\x0b\x32!.chalk.auth.v1.DisplayTenantAgentH\x00R\x0btenantAgent\x12\x62\n\x16metadata_service_agent\x18\x05 \x01(\x0b\x32*.chalk.auth.v1.DisplayMetadataServiceAgentH\x00R\x14metadataServiceAgentB\x07\n\x05\x61gentB\x86\x01\n\x11\x63om.chalk.auth.v1B\x11\x44isplayagentProtoP\x01Z\x0e\x61uth/v1;authv1\xa2\x02\x03\x43\x41X\xaa\x02\rChalk.Auth.V1\xca\x02\rChalk\\Auth\\V1\xe2\x02\x19\x43halk\\Auth\\V1\\GPBMetadata\xea\x02\tChalkRubyb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module ChalkRuby
  DisplayPermission = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.auth.v1.DisplayPermission").msgclass
  DisplayEnvironmentPermissions = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.auth.v1.DisplayEnvironmentPermissions").msgclass
  DisplayUserAgent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.auth.v1.DisplayUserAgent").msgclass
  DisplayCustomClaim = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.auth.v1.DisplayCustomClaim").msgclass
  DisplayServiceTokenAgent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.auth.v1.DisplayServiceTokenAgent").msgclass
  DisplayEngineAgent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.auth.v1.DisplayEngineAgent").msgclass
  DisplayTenantAgent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.auth.v1.DisplayTenantAgent").msgclass
  DisplayMetadataServiceAgent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.auth.v1.DisplayMetadataServiceAgent").msgclass
  DisplayAgent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.auth.v1.DisplayAgent").msgclass
end
