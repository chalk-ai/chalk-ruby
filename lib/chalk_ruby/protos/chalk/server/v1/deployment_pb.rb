# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chalk/server/v1/deployment.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'


descriptor_data = "\n chalk/server/v1/deployment.proto\x12\x0f\x63halk.server.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x88\x01\n\x0eInstanceSizing\x12(\n\rmin_instances\x18\x01 \x01(\rH\x00R\x0cminInstances\x88\x01\x01\x12(\n\rmax_instances\x18\x02 \x01(\rH\x01R\x0cmaxInstances\x88\x01\x01\x42\x10\n\x0e_min_instancesB\x10\n\x0e_max_instances\"\xa0\x06\n\nDeployment\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12%\n\x0e\x65nvironment_id\x18\x02 \x01(\tR\renvironmentId\x12\x39\n\x06status\x18\x03 \x01(\x0e\x32!.chalk.server.v1.DeploymentStatusR\x06status\x12\'\n\x0f\x64\x65ployment_tags\x18\x04 \x03(\tR\x0e\x64\x65ploymentTags\x12\x38\n\x15requirements_filepath\x18\x07 \x01(\tH\x00R\x14requirementsFilepath\x88\x01\x01\x12\x34\n\x13\x64ockerfile_filepath\x18\x08 \x01(\tH\x01R\x12\x64ockerfileFilepath\x88\x01\x01\x12\x1d\n\x07runtime\x18\t \x01(\tH\x02R\x07runtime\x88\x01\x01\x12\x37\n\x15\x66inal_dependency_hash\x18\x0c \x01(\tH\x03R\x13\x66inalDependencyHash\x88\x01\x01\x12\x37\n\x15is_preview_deployment\x18\r \x01(\x08H\x04R\x13isPreviewDeployment\x88\x01\x01\x12\x39\n\ncreated_at\x18\x0e \x01(\x0b\x32\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x39\n\nupdated_at\x18\x0f \x01(\x0b\x32\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1d\n\ngit_commit\x18\x10 \x01(\tR\tgitCommit\x12\x32\n\x12requirements_files\x18\x16 \x01(\tH\x05R\x11requirementsFiles\x88\x01\x01\x12$\n\x0e\x62\x61se_image_sha\x18\x18 \x01(\tR\x0c\x62\x61seImageShaB\x18\n\x16_requirements_filepathB\x16\n\x14_dockerfile_filepathB\n\n\x08_runtimeB\x18\n\x16_final_dependency_hashB\x18\n\x16_is_preview_deploymentB\x15\n\x13_requirements_files*\xbd\x03\n\x10\x44\x65ploymentStatus\x12!\n\x1d\x44\x45PLOYMENT_STATUS_UNSPECIFIED\x10\x00\x12\x1d\n\x19\x44\x45PLOYMENT_STATUS_UNKNOWN\x10\x01\x12\x1d\n\x19\x44\x45PLOYMENT_STATUS_PENDING\x10\x02\x12\x1c\n\x18\x44\x45PLOYMENT_STATUS_QUEUED\x10\x03\x12\x1d\n\x19\x44\x45PLOYMENT_STATUS_WORKING\x10\x04\x12\x1d\n\x19\x44\x45PLOYMENT_STATUS_SUCCESS\x10\x05\x12\x1d\n\x19\x44\x45PLOYMENT_STATUS_FAILURE\x10\x06\x12$\n DEPLOYMENT_STATUS_INTERNAL_ERROR\x10\x07\x12\x1d\n\x19\x44\x45PLOYMENT_STATUS_TIMEOUT\x10\x08\x12\x1f\n\x1b\x44\x45PLOYMENT_STATUS_CANCELLED\x10\t\x12\x1d\n\x19\x44\x45PLOYMENT_STATUS_EXPIRED\x10\n\x12!\n\x1d\x44\x45PLOYMENT_STATUS_BOOT_ERRORS\x10\x0b\x12%\n!DEPLOYMENT_STATUS_AWAITING_SOURCE\x10\x0c\x42\x90\x01\n\x13\x63om.chalk.server.v1B\x0f\x44\x65ploymentProtoP\x01Z\x12server/v1;serverv1\xa2\x02\x03\x43SX\xaa\x02\x0f\x43halk.Server.V1\xca\x02\x0f\x43halk\\Server\\V1\xe2\x02\x1b\x43halk\\Server\\V1\\GPBMetadata\xea\x02\tChalkRubyb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module ChalkRuby
  InstanceSizing = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.InstanceSizing").msgclass
  Deployment = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.Deployment").msgclass
  DeploymentStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.DeploymentStatus").enummodule
end
