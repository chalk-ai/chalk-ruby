# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chalk/server/v1/auth.proto

require 'google/protobuf'

require 'chalk/auth/v1/audit_pb'
require 'chalk/auth/v1/permissions_pb'
require 'chalk/server/v1/link_pb'
require 'chalk/utils/v1/sensitive_pb'
require 'google/protobuf/descriptor_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n\x1a\x63halk/server/v1/auth.proto\x12\x0f\x63halk.server.v1\x1a\x19\x63halk/auth/v1/audit.proto\x1a\x1f\x63halk/auth/v1/permissions.proto\x1a\x1a\x63halk/server/v1/link.proto\x1a\x1e\x63halk/utils/v1/sensitive.proto\x1a google/protobuf/descriptor.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x9d\x01\n\x0fGetTokenRequest\x12\x1b\n\tclient_id\x18\x01 \x01(\tR\x08\x63lientId\x12)\n\rclient_secret\x18\x02 \x01(\tB\x04\xd8\xa1\'\x01R\x0c\x63lientSecret\x12\x1d\n\ngrant_type\x18\x03 \x01(\tR\tgrantType\x12\x19\n\x05scope\x18\x04 \x01(\tH\x00R\x05scope\x88\x01\x01\x42\x08\n\x06_scope\"\xf7\x05\n\x10GetTokenResponse\x12\'\n\x0c\x61\x63\x63\x65ss_token\x18\x01 \x01(\tB\x04\xd8\xa1\'\x01R\x0b\x61\x63\x63\x65ssToken\x12\x1d\n\ntoken_type\x18\x02 \x01(\tR\ttokenType\x12\x1d\n\nexpires_in\x18\x03 \x01(\x05R\texpiresIn\x12\x39\n\nexpires_at\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\texpiresAt\x12\x1d\n\napi_server\x18\x05 \x01(\tR\tapiServer\x12\x34\n\x13primary_environment\x18\x06 \x01(\tH\x00R\x12primaryEnvironment\x88\x01\x01\x12H\n\x07\x65ngines\x18\x07 \x03(\x0b\x32..chalk.server.v1.GetTokenResponse.EnginesEntryR\x07\x65ngines\x12U\n\x0cgrpc_engines\x18\x08 \x03(\x0b\x32\x32.chalk.server.v1.GetTokenResponse.GrpcEnginesEntryR\x0bgrpcEngines\x12o\n\x16\x65nvironment_id_to_name\x18\t \x03(\x0b\x32:.chalk.server.v1.GetTokenResponse.EnvironmentIdToNameEntryR\x13\x65nvironmentIdToName\x1a:\n\x0c\x45nginesEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x1a>\n\x10GrpcEnginesEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x1a\x46\n\x18\x45nvironmentIdToNameEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x42\x16\n\x14_primary_environment\"j\n\x18UpdateLinkSessionRequest\x12\x16\n\x06status\x18\x01 \x01(\tR\x06status\x12\x17\n\x07user_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n\nsession_id\x18\x03 \x01(\tR\tsessionId\"+\n\x19UpdateLinkSessionResponse\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id2\xbf\x03\n\x0b\x41uthService\x12Z\n\x08GetToken\x12 .chalk.server.v1.GetTokenRequest\x1a!.chalk.server.v1.GetTokenResponse\"\t\x80}\x01\x8a\xd3\x0e\x02\x08\x01\x12u\n\x11\x43reateLinkSession\x12).chalk.server.v1.CreateLinkSessionRequest\x1a*.chalk.server.v1.CreateLinkSessionResponse\"\t\x80}\x01\x8a\xd3\x0e\x02\x08\x01\x12\x66\n\x0eGetLinkSession\x12&.chalk.server.v1.GetLinkSessionRequest\x1a\'.chalk.server.v1.GetLinkSessionResponse\"\x03\x80}\x01\x12u\n\x11UpdateLinkSession\x12).chalk.server.v1.UpdateLinkSessionRequest\x1a*.chalk.server.v1.UpdateLinkSessionResponse\"\t\x80}\x01\x8a\xd3\x0e\x02\x08\x01\x42\x8a\x01\n\x13\x63om.chalk.server.v1B\tAuthProtoP\x01Z\x12server/v1;serverv1\xa2\x02\x03\x43SX\xaa\x02\x0f\x43halk.Server.V1\xca\x02\x0f\x43halk\\Server\\V1\xe2\x02\x1b\x43halk\\Server\\V1\\GPBMetadata\xea\x02\tChalkRubyb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module ChalkRuby
  GetTokenRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.GetTokenRequest").msgclass
  GetTokenResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.GetTokenResponse").msgclass
  UpdateLinkSessionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.UpdateLinkSessionRequest").msgclass
  UpdateLinkSessionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.UpdateLinkSessionResponse").msgclass
end
