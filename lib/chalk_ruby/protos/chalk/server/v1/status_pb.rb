# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chalk/server/v1/status.proto

require 'google/protobuf'

require 'chalk/auth/v1/permissions_pb'


descriptor_data = "\n\x1c\x63halk/server/v1/status.proto\x12\x0f\x63halk.server.v1\x1a\x1f\x63halk/auth/v1/permissions.proto\"\x88\x01\n\x0bHealthCheck\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12:\n\x06status\x18\x02 \x01(\x0e\x32\".chalk.server.v1.HealthCheckStatusR\x06status\x12\x1d\n\x07message\x18\x03 \x01(\tH\x00R\x07message\x88\x01\x01\x42\n\n\x08_message\"\x14\n\x12\x43heckHealthRequest\"K\n\x13\x43heckHealthResponse\x12\x34\n\x06\x63hecks\x18\x01 \x03(\x0b\x32\x1c.chalk.server.v1.HealthCheckR\x06\x63hecks*u\n\x11HealthCheckStatus\x12#\n\x1fHEALTH_CHECK_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n\x16HEALTH_CHECK_STATUS_OK\x10\x01\x12\x1f\n\x1bHEALTH_CHECK_STATUS_FAILING\x10\x02\x32q\n\rHealthService\x12`\n\x0b\x43heckHealth\x12#.chalk.server.v1.CheckHealthRequest\x1a$.chalk.server.v1.CheckHealthResponse\"\x06\x90\x02\x01\x80}\x01\x42\x8c\x01\n\x13\x63om.chalk.server.v1B\x0bStatusProtoP\x01Z\x12server/v1;serverv1\xa2\x02\x03\x43SX\xaa\x02\x0f\x43halk.Server.V1\xca\x02\x0f\x43halk\\Server\\V1\xe2\x02\x1b\x43halk\\Server\\V1\\GPBMetadata\xea\x02\tChalkRubyb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module ChalkRuby
  HealthCheck = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.HealthCheck").msgclass
  CheckHealthRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.CheckHealthRequest").msgclass
  CheckHealthResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.CheckHealthResponse").msgclass
  HealthCheckStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.HealthCheckStatus").enummodule
end
