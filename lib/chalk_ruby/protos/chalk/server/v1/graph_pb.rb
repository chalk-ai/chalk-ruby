# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chalk/server/v1/graph.proto

require 'google/protobuf'

require 'chalk/auth/v1/permissions_pb'
require 'chalk/graph/v1/graph_pb'


descriptor_data = "\n\x1b\x63halk/server/v1/graph.proto\x12\x0f\x63halk.server.v1\x1a\x1f\x63halk/auth/v1/permissions.proto\x1a\x1a\x63halk/graph/v1/graph.proto\"\xd8\x04\n\nFeatureSQL\x12\x0e\n\x02id\x18\x01 \x01(\x03R\x02id\x12%\n\x0e\x65nvironment_id\x18\x02 \x01(\tR\renvironmentId\x12(\n\rdeployment_id\x18\x03 \x01(\tH\x00R\x0c\x64\x65ploymentId\x88\x01\x01\x12\x10\n\x03\x66qn\x18\x04 \x01(\tR\x03\x66qn\x12\x12\n\x04name\x18\x05 \x01(\tR\x04name\x12\x1c\n\tnamespace\x18\x06 \x01(\tR\tnamespace\x12(\n\rmax_staleness\x18\x07 \x01(\tH\x01R\x0cmaxStaleness\x88\x01\x01\x12\x31\n\x15\x65tl_offline_to_online\x18\x08 \x01(\x08R\x12\x65tlOfflineToOnline\x12%\n\x0b\x64\x65scription\x18\t \x01(\tH\x02R\x0b\x64\x65scription\x88\x01\x01\x12\x19\n\x05owner\x18\n \x01(\tH\x03R\x05owner\x88\x01\x01\x12\x12\n\x04tags\x18\x0b \x03(\tR\x04tags\x12\x1b\n\tkind_enum\x18\x0c \x01(\tR\x08kindEnum\x12\x12\n\x04kind\x18\r \x01(\tR\x04kind\x12\x1b\n\twas_reset\x18\x0e \x01(\x08R\x08wasReset\x12.\n\x10internal_version\x18\x0f \x01(\x03H\x04R\x0finternalVersion\x88\x01\x01\x12!\n\x0cis_singleton\x18\x10 \x01(\x08R\x0bisSingletonB\x10\n\x0e_deployment_idB\x10\n\x0e_max_stalenessB\x0e\n\x0c_descriptionB\x08\n\x06_ownerB\x13\n\x11_internal_version\"P\n\x15GetFeatureSQLResponse\x12\x37\n\x08\x66\x65\x61tures\x18\x01 \x03(\x0b\x32\x1b.chalk.server.v1.FeatureSQLR\x08\x66\x65\x61tures\";\n\x14GetFeatureSQLRequest\x12#\n\rdeployment_id\x18\x01 \x01(\tR\x0c\x64\x65ploymentId\"\xb4\x02\n\x0f\x46\x65\x61tureMetadata\x12\x10\n\x03\x66qn\x18\x01 \x01(\tR\x03\x66qn\x12\x12\n\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n\tnamespace\x18\x03 \x01(\tR\tnamespace\x12%\n\x0b\x64\x65scription\x18\x04 \x01(\tH\x00R\x0b\x64\x65scription\x88\x01\x01\x12\x19\n\x05owner\x18\x05 \x01(\tH\x01R\x05owner\x88\x01\x01\x12\x12\n\x04tags\x18\x06 \x03(\tR\x04tags\x12(\n\rmax_staleness\x18\x07 \x01(\tH\x02R\x0cmaxStaleness\x88\x01\x01\x12\x31\n\x15\x65tl_offline_to_online\x18\x08 \x01(\x08R\x12\x65tlOfflineToOnlineB\x0e\n\x0c_descriptionB\x08\n\x06_ownerB\x10\n\x0e_max_staleness\"\xa7\x01\n\x1bGetFeaturesMetadataResponse\x12<\n\x08\x66\x65\x61tures\x18\x01 \x03(\x0b\x32 .chalk.server.v1.FeatureMetadataR\x08\x66\x65\x61tures\x12%\n\x0e\x65nvironment_id\x18\x02 \x01(\tR\renvironmentId\x12#\n\rdeployment_id\x18\x03 \x01(\tR\x0c\x64\x65ploymentId\"\x1c\n\x1aGetFeaturesMetadataRequest\"\xae\x01\n\x12UpdateGraphRequest\x12#\n\rdeployment_id\x18\x01 \x01(\tR\x0c\x64\x65ploymentId\x12+\n\x05graph\x18\x02 \x01(\x0b\x32\x15.chalk.graph.v1.GraphR\x05graph\x12\'\n\x0f\x63halkpy_version\x18\x03 \x01(\tR\x0e\x63halkpyVersion\x12\x15\n\x03tag\x18\x04 \x01(\tH\x00R\x03tag\x88\x01\x01\x42\x06\n\x04_tag\"\x15\n\x13UpdateGraphResponse\"6\n\x0fGetGraphRequest\x12#\n\rdeployment_id\x18\x01 \x01(\tR\x0c\x64\x65ploymentId\"\x87\x01\n\x10GetGraphResponse\x12+\n\x05graph\x18\x01 \x01(\x0b\x32\x15.chalk.graph.v1.GraphR\x05graph\x12\'\n\x0f\x63halkpy_version\x18\x02 \x01(\tR\x0e\x63halkpyVersion\x12\x15\n\x03tag\x18\x03 \x01(\tH\x00R\x03tag\x88\x01\x01\x42\x06\n\x04_tag2\xa8\x03\n\x0cGraphService\x12\x66\n\rGetFeatureSQL\x12%.chalk.server.v1.GetFeatureSQLRequest\x1a&.chalk.server.v1.GetFeatureSQLResponse\"\x06\x90\x02\x01\x80}\x0b\x12x\n\x13GetFeaturesMetadata\x12+.chalk.server.v1.GetFeaturesMetadataRequest\x1a,.chalk.server.v1.GetFeaturesMetadataResponse\"\x06\x90\x02\x01\x80}\x0b\x12W\n\x08GetGraph\x12 .chalk.server.v1.GetGraphRequest\x1a!.chalk.server.v1.GetGraphResponse\"\x06\x90\x02\x01\x80}\x0b\x12]\n\x0bUpdateGraph\x12#.chalk.server.v1.UpdateGraphRequest\x1a$.chalk.server.v1.UpdateGraphResponse\"\x03\x80}\x0b\x42\x8b\x01\n\x13\x63om.chalk.server.v1B\nGraphProtoP\x01Z\x12server/v1;serverv1\xa2\x02\x03\x43SX\xaa\x02\x0f\x43halk.Server.V1\xca\x02\x0f\x43halk\\Server\\V1\xe2\x02\x1b\x43halk\\Server\\V1\\GPBMetadata\xea\x02\tChalkRubyb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module ChalkRuby
  FeatureSQL = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.FeatureSQL").msgclass
  GetFeatureSQLResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.GetFeatureSQLResponse").msgclass
  GetFeatureSQLRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.GetFeatureSQLRequest").msgclass
  FeatureMetadata = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.FeatureMetadata").msgclass
  GetFeaturesMetadataResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.GetFeaturesMetadataResponse").msgclass
  GetFeaturesMetadataRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.GetFeaturesMetadataRequest").msgclass
  UpdateGraphRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.UpdateGraphRequest").msgclass
  UpdateGraphResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.UpdateGraphResponse").msgclass
  GetGraphRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.GetGraphRequest").msgclass
  GetGraphResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.GetGraphResponse").msgclass
end
